[project]
name = "pyjams"
version = "0.3.0"
description = "Python django heroku application for spotify playlist sharing and collaboration"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "dj-database-url>=2.3.0",
    "django>=5.1.4",
    "fastapi>=0.115.6",
    "gunicorn>=23.0.0",
    "pip>=24.3.1",
    "psycopg[binary]>=3.2.3",
    "spotipy>=2.24.0",
    "uv>=0.5.11",
    "whitenoise[brotli]>=6.8.2",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
  "invoke>=2.2.0",
  "mypy>=1.13.0",
  "pytest-xdist>=3.6.1",
  "pytest>=8.3.4",
  "python-dotenv>=1.0.1",
  "ruff>=0.8.4",
  "uv>=0.5.10",
]

[tool.pytest.ini_options]
addopts = """
    -n auto
    --color=yes
"""
log_cli = true
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_level = "INFO"
markers = [
  "unit: marks tests as unit tests",
  "ci: marks tests as continuous integration tests",
  "slow: marks tests as slow",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
  "D", # ignore all docstring rules
]
select = [
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "N", # pep8-naming
  "UP", # pyupgrade
  "RUF", # ruff-specific
  "PTH", # use pathlib
  "SIM", # simplify
  "TID", # tidy imports
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ANN", # ignore type annotations in tests
  "S101", # ignore assert statements in tests
]
"**/migrations/*.py" = [
  "E501", # ignore line length in migrations
  "RUF012", # ignore mutable class attributes in migrations
  "I001" # ignore import order
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["pyjams"]

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.mypy]
ignore_missing_imports = true
disable_error_code = ["misc", "attr-defined"]
strict = true
warn_return_any = false
exclude = ["migrations/"]

[[tool.mypy.overrides]]
module = "tests.*"
check_untyped_defs = false
disable_error_code = [
    "no-untyped-def",
    "no-untyped-call",
    "union-attr",
    "type-arg",
    "arg-type",
    "index",
    "operator"
]
strict = false
warn_return_any = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "tasks"
disable_error_code = ["no-untyped-def"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "manage"
disable_error_code = ["no-untyped-def"]
disallow_untyped_defs = false
