name: Django CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "requirements**.txt" # Heroku requires export of requirements.txt
    - name: Install python and dependencies
      run: uv python install
    - name: Install the project
      run: uv sync --all-extras
  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: ['lint', 'pytest', 'django']
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Run Tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      run: |
        case ${{ matrix.test-type }} in
          lint)
            uv run invoke lint
            ;;
          pytest)
            uv run invoke tests
            ;;
          django)
            uv run python manage.py test
            ;;
        esac

