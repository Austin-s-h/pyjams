name: Django CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-type: ['lint', 'pytest', 'django']
        include:
          - test-type: pytest
            needs-db: true
          - test-type: django
            needs-db: true
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "requirements**.txt"
    
    - run: |
        uv install python
        uv sync --all-extras
    
    - name: Run ${{ matrix.test-type }}
      env:
        DATABASE_URL: ${{ matrix.needs-db && 'postgresql://postgres:postgres@localhost:5432/test_db' || '' }}
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      run: |
        case ${{ matrix.test-type }} in
          lint) uv run invoke lint ;;
          pytest) uv run invoke test ;;
          django) uv run python manage.py test ;;
        esac

